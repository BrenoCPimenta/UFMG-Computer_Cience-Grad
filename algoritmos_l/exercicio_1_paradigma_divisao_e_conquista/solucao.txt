function uniformlyRandom ( orgn_list  ):
    if (orgn_list.size == 1) return orgn_list

    //Caso seja maior que um divide a lista:
    half_position <- (orgn_list.size)/2
    first_list <- orgn_list [ : half_position]
    second_list <- orgn_list [ half_position : ]

    //Chamada recursiva
    first_list <- uniformlyRandom(first_list)
    second_list <- uniformlyRandom(second_list)

    //Unindo listas de forma aleatÃ³ria
    for i in range( first_list.size + second_list.size):
        binary <- random(0 || 1)
        if (binary == 1):
            if (first_list.size == 0 && second_list.size != 0):
                orgn_list.append(second_list )
                break
            else:
                orgn_list [ i ] <- extract_first_element(first_list)
        else:
            if (second_list.size == 0 && first_list.size != 0):
                orgn_list.append(first_list)
                break
            else:
                orgn_list [ i ] <- extract_first_element(second_list )

    return orgn_list