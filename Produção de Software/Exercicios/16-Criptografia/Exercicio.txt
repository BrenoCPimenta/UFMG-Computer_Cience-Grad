Neste exercício, faremos uma simulação de criptografia baseada em cifra de substituição simples. Nesse tipo de criptografia existe um novo arranjo para os caracteres do texto que é utilizado como chave para cada uma das letras, indicando como ela é substituída por outra para que a mensagem não seja compreendida por um leitor que não possua a cifra. Considere que, para esse trabalho, os caracteres que são cifrados bem como a sua ordem original são:

Caracteres: [a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,0,1,2,3,4,5,6,7,8,9] . Todos os caracteres que não estão citados no conjunto anterior NÃO POSSUEM cifragem, e devem ser mantidos, tais como acentos, letras maiúsculas, pontuações, etc. A título de exemplo, considere as seguintes entradas e as seguintes cifra de substituição:

Entrada: pds2 2019

Cifra: [o,3,u,w,i,l,a,j,g,5,8,2,t,9,v,q,e,n,z,s,b,p,m,c,d,6,k,r,x,4,h,y,f,1,7,0]

Nesse caso, a mensagem cifrada é: qwzx xkr0.

Entrada: pds2 2019! (note a presença do caractere "!" ao final).

Cifra: [o,3,u,w,i,l,a,j,g,5,8,2,t,9,v,q,e,n,z,s,b,p,m,c,d,6,k,r,x,4,h,y,f,1,7,0]

Nesse caso, a mensagem cifrada é: qwzx xkr0!. Perceba que o caractere “!” não foi cifrado, uma vez que não existe no conjunto original.

O objetivo desse exercício é utilizar a idéia de namespaces para definir dois diferentes ambientes: o ambiente de cifragem e o ambiente de decifrarem. Sejam esses ambientes conhecidos como: Encoder e Decoder. Leia atentamente a descrição de cada um dos ambientes para prosseguir, e ao final veja os exemplos:

Ambiente Encoder: 
Nesse ambiente DEVEM ser implementadas:
a) Uma classe Enc.
b) Um construtor para a classe Enc, que recebe como parâmetro a cifra, uma string.
c) Um método, dentro da classe Enc, que realiza a cifragem da frase - chamado EncodeMessage. Esse método recebe como parâmetro a mensagem a ser cifrada.
d) Uma função - fora da classe Enc, mas dentro do namespace Encoder - chamada print. Essa função deve imprimir o valor cifrado da mensagem obedecendo ao seguinte formato: “Encoded message: <mensagem cifrada>”. 
e) Uma função - fora da classe Enc, mas dentro do namespace Encoder - chamada getMessage. Essa função deve retornar o valor da mensagem cifrada. 
Ambiente Decoder:
Nesse ambiente DEVEM ser implementadas:
a) Uma classe Dec.
b) Um construtor para a classe Dec, que recebe como parâmetro um ponteiro para um objeto do tipo Enc. 
c) Um método - dentro da classe Dec - que decifra uma mensagem passada como parâmetro (essa mensagem é uma string) - chamado DecodeMessage. Observe que você pode ter acesso à cifra a partir do objeto Enc.
d) Uma função - fora da classe Dec, mas dentro do namespace Decoder - chamada print. Essa função deve imprimir o valor decifrado da mensagem contida no objeto Enc obedecendo ao seguinte formado: “Decoded message: <mensagem decifrada>”.
Fica autorizado aos alunos a criação de qualquer método que julgarem necessários desde que os mesmos estejam dentro de um dos dois namespaces citados. 

A função main já está implementada e livre de erros. Caso você deseje ver a implementação da mesma, clique aqui. Exemplos de execução são mostrados a seguir:

(ver imagem)